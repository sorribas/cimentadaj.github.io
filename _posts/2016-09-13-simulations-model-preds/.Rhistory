lmer(Income ~ Level + (1 | Zone), data = .) %>%
coef(M1)
sample_n(Lucy, size = 1000) %>%
lmer(Income ~ Level + (1 | Zone), data = .) %>%
coef()
SLucy$Pred <- predict(M1)
grouped <- group_by(SLucy, Zone, Level)
sum <- summarise(grouped, mean2 = mean(Pred))
sum
sum
(Mupred <- matrix(sum$mean2, ncol = 5, nrow = 3))
colSums(Np * Mupred) / table(Lucy$Zone)
Np
(Np * Mupred)
colSums(Np * Mupred)
table(Lucy$Zone)
Np
Np * Mupred
colSums(Np * Mupred)
colSums(Np * Mupred) / table(Lucy$Zone)
aggregate(Lucy$Income, by = list(Lucy$Zone), FUN = mean)
est <- colSums(Np * Mupred) / table(Lucy$Zone)
cbind(aggregate(Lucy$Income, by = list(Lucy$Zone), FUN = mean), est)
mtcars$m <- NA
?replace
mtcars
with(mtcars, m[cyl == 8 & mpg > 20] <- "HEY")
mtcars
with(mtcars, m[cyl == 8 & mpg <= 20] <- "HEY")
mtcars
mtcars$m[mtcars$cyl == 8 & mtcars$mpg <= 20] <- "HEY")
mtcars$m[mtcars$cyl == 8 & mtcars$mpg <= 20] <- "HEY"
mtcars
mtcars
data(mtcars)
mtcars
mtcars$m <- NA
within(mtcars, m[cyl == 8 & mpg <= 20] <- "HEY")
?within
library(tidyverse)
mtcars
mtcars %>%
group_by(cyl) %>%
summarise(m = mean(mpg))
mtcars %>%
group_by(cyl, am) %>%
summarise(m = mean(mpg))
mtcars %>%
group_by(cyl, am) %>%
summarise(m = mean(mpg)) %>%
ggplot(aes(x = cyl, y = m, fill = am)) +
geom_col()
mtcars %>%
group_by(cyl, am) %>%
summarise(m = mean(mpg)) %>%
ggplot(aes(x = cyl, y = m, fill = am)) +
geom_col(position = 'dodge')
mtcars %>%
group_by(cyl, am) %>%
summarise(m = mean(mpg)) %>%
ggplot(aes(x = cyl, y = m, fill = as.factor(am))) +
geom_col(position = 'dodge')
mtcars
mtcars
mtcars %>%
group_by(cyl) %>%
mutate(m = mean(mpg))
lm(mpg ~ cyl, mtcars)
library(broom)
tidy(lm(mpg ~ cyl, mtcars))
library(swirl)
library(tidyverse)
library(swirl)
swirl()
getwd()
read.table("asfr752012ine1.csv")
read.table("asfr752012ine1.csv")
library('intsvy')
dir <- "/Users/cimentadaj/Downloads/PIRLS/2011/PIRLS/Grade 04/Y2011/Data/SPSS/" # enter your directory (eg. C:/PIRLS 2011/Data)
pirls <- pirls.select.merge(folder= dir,
countries= c("AUS", "AUT", "AZE", "BFR"),
student= c("ITSEX", "ASDAGE", "ASBGSMR"),
home= c("ASDHEDUP", "ASDHOCCP", "ASDHELA", "ASBHELA"),
school= c("ACDGDAS", "ACDGCMP", "ACDG03"))
dim(pirls)
library(devtools)
getwd()
create("./Downloads/gitrepo/cimentadaj")
getwd()
library(cimentadaj)
ls(pos = "package:cimentadaj")
library(devtools)
create("./Downloads/gitrepo/cimentadaj")
use_git()
library(devtools)
create("./Downloads/gitrepo/cimentadaj")
devtools::install_github("cimentadaj/cimentadaj")
library(cimentadaj)
reverse_name(c('a' = 'b'))
devtools::install_github("cimentadaj/cimentadaj")
library(cimentadaj)
?robustse
library(haven)
dat <- read_dta("http://www.stata-press.com/data/r9/quad1.dta")
mod1 <- glm(z ~ x1 + x2 + x3, dat, family = binomial)
mod1
robustse(mod1, coef = "logit")
robustse(mod1, coef = "odd.ratio")
robustse(mod1, coef = "probs")
class(robustse(mod1, coef = "logit"))
robustse(mod1, coef = "logit"))
robustse(mod1, coef = "logit")
str(robustse(mod1, coef = "logit"))
timer(0.5)
availabel <- 1387 - 800
availabel <- 1387 - 800
availabel
availabel <- 1387 - 500
availabel
?haven::write.csv
?write.csv
x <- list(1:10, 1:2)
??rds
save(x, file = "mymodel.rda")
getwd()
ls()
list.files(getwd())
load("mymodel.rda")
mymodel
x
rm(x)
mymodel
load("mymodel.rda")
x
rm(x)
?save
save
getOption
ls()
available <- 1387
available <- 1387 - 500
available
nightlife <- 200
available <- 1387 - 500
rent <- 300
supermarket <- 200
phone <- 15
nightlife <- 200
available - (rent + supermarket + phone + nightlife)
available - (rent + supermarket + phone + nightlife)
nightlife <- 150
valencia <- 40
available - (rent + supermarket + phone + nightlife + valencia)
available <- 1387 - 500
rent <- 300
supermarket <- 200
phone <- 15
nightlife <- 150
valencia <- 40 + 50
available - (rent + supermarket + phone + nightlife + valencia)
available - (rent + supermarket + phone + nightlife + valencia + leroy_desk)
leroy_desk <- 30
available - (rent + supermarket + phone + nightlife + valencia + leroy_desk)
available - (rent + supermarket + phone + nightlife + valencia + leroy_desk)
rowSums(mtcars)
is.na(mtcars)
rowSums(is.na(mtcars))
ncol(mtcars)
rowSums(is.na(mtcars) != ncol(mtcars))
```metadatatable1$rcodeOutput <- sapply(metadatatable1$applicableRcode, function(scripts) source(scripts))```
data <- structure(list(ID = 1:2, Zeit600 = c(601.782608695652, 602.625
), Zeit650 = c(504.705882352941, 546.666666666667), Zeit700 = c(321.26582278481,
316.666666666667), Zeit750 = c(264.303797468354, 261.111111111111
), Zeit800 = c(207.341772151899, 205.555555555556)), row.names = c(NA,
-2L), .Names = c("ID", "Zeit600", "Zeit650", "Zeit700", "Zeit750",
"Zeit800"), class = "data.frame")
head(data)
data$Zeit600 - data$Zeit800
data["Zeit600"]
lapply(c("Zeit600", "Zeit650", "Zeit700"), function(var) data[var] - data["Zeit800"])
data
lapply(c("Zeit600", "Zeit650", "Zeit700", "Zeit750"), function(var) data[var] - data["Zeit800"])
data[] <- lapply(c("Zeit600", "Zeit650", "Zeit700", "Zeit750"), function(var) data[var] - data["Zeit800"])
data
data <- structure(list(ID = 1:2, Zeit600 = c(601.782608695652, 602.625
), Zeit650 = c(504.705882352941, 546.666666666667), Zeit700 = c(321.26582278481,
316.666666666667), Zeit750 = c(264.303797468354, 261.111111111111
), Zeit800 = c(207.341772151899, 205.555555555556)), row.names = c(NA,
-2L), .Names = c("ID", "Zeit600", "Zeit650", "Zeit700", "Zeit750",
"Zeit800"), class = "data.frame")
lapply(c("Zeit600", "Zeit650", "Zeit700", "Zeit750"), function(var) data[var] - data["Zeit800"])
names(data)
grep("ID | 800", names(data))
grep("ID | 800", names(data))
grepl("ID | 800", names(data))
grepl("ID|800", names(data))
grep("ID|800", names(data), invert = T)
grep("ID|800", names(data), invert = T, val = T)
variables <- grep("ID|800", names(data), invert = T, val = T)
lapply(variables, function(var) data[var] - data["Zeit800"])
variables
as.numeric(variables)
variables
gsub["a:z", "", variables]
gsub["[a:z]", "", variables]
?gsub
gsub["[:alpha:]", "", variables]
gsub[[:alpha:], "", variables]
gsub("[:alpha:]", "", variables)
gsub("[:alpha:]", " ", variables)
grepl("[:alpha:], variables")
grepl("[:alpha:], variables)
grepl("[:alpha:]", variables)
grepl([:alpha:], variables)
grepl("[:alpha:]", variables)
gsub("[:alpha:]", " ", variables)
gsub("[:alnum:]", "", variables)
gsub("[:lower:]", " ", variables)
sub("[:lower:]", " ", variables)
sub("[:lower:]", "", variables)
sub("[:upper:]", "", variables)
sub("[:upper:]", "", variables)
?gsub
sub("[:a-z:]", "", variables)
sub("[a-z]", "", variables)
gsub("[:a-z:]", "", variables)
gsub("[:alpha:]", "", variables)
gsub("[:lower:]", "", variables)
gsub("[:a-z:]|[:A-Z:]", "", variables)
colnames <- paste0("T800_", "T_", gsub("[:a-z:]|[:A-Z:]", "", variables))
new_data <- lapply(variables, function(var) data[var] - data["Zeit800"])
do.call("cbind", new_data)
colnames
colnames <- paste0("T800_", "T", gsub("[:a-z:]|[:A-Z:]", "", variables))
names(new_data) <- colnames
do.call("cbind", new_data)
variables <- grep("ID|800", names(data), invert = T, val = T)
new_data <- lapply(variables, function(var) data[var] - data["Zeit800"])
colnames <- paste0("T800_", "T", gsub("[:a-z:]|[:A-Z:]", "", variables))
names(new_data) <- colnames
do.call("cbind", new_data)
new_data
new_data <- lapply(variables, function(var) data[var] - data["Zeit800"])
new_data
variables <- grep("ID|800", names(data), invert = T, val = T)
new_data <- lapply(variables, function(var) data[, var] - data[, "Zeit800"])
colnames <- paste0("T800_", "T", gsub("[:a-z:]|[:A-Z:]", "", variables))
names(new_data) <- colnames
do.call("cbind", new_data)
data <- as.data.frame(cbind(data, do.call("cbind", new_data)))
data
new_data <- sapply(variables, function(var) data[, var] - data[, "Zeit800"])
new_data
colnames <- paste0("T800_", "T", gsub("[:a-z:]|[:A-Z:]", "", variables))
names(new_data) <- colnames
new_data
new_data <- sapply(variables, function(var) data[, var] - data[, "Zeit800"])
new_data
rm(colnames)
colnames(new_data)
variables <- grep("ID|800", names(data), invert = T, val = T)
new_data <- sapply(variables, function(var) data[, var] - data[, "Zeit800"])
col <- paste0("T800_", "T", gsub("[:a-z:]|[:A-Z:]", "", variables))
colnames(new_data) <- col
data <- as.data.frame(cbind(data, new_data))
data
variables <- grep("ID|800", names(data), invert = T, val = T)
new_data <- sapply(variables, function(var) data[, var] - data[, "Zeit800"])
new_data
data <- structure(list(ID = 1:2, Zeit600 = c(601.782608695652, 602.625
), Zeit650 = c(504.705882352941, 546.666666666667), Zeit700 = c(321.26582278481,
316.666666666667), Zeit750 = c(264.303797468354, 261.111111111111
), Zeit800 = c(207.341772151899, 205.555555555556)), row.names = c(NA,
-2L), .Names = c("ID", "Zeit600", "Zeit650", "Zeit700", "Zeit750",
"Zeit800"), class = "data.frame")
variables <- grep("ID|800", names(data), invert = T, val = T)
new_data <- sapply(variables, function(var) data[, var] - data[, "Zeit800"])
col <- paste0("T800_", "T", gsub("[:a-z:]|[:A-Z:]", "", variables))
colnames(new_data) <- col
data <- as.data.frame(cbind(data, new_data))
data
test <- lapply(mydf[,2:4], function(x) x-mydf$T800)
data <- structure(list(ID = 1:2, Zeit600 = c(601.782608695652, 602.625
), Zeit650 = c(504.705882352941, 546.666666666667), Zeit700 = c(321.26582278481,
316.666666666667), Zeit750 = c(264.303797468354, 261.111111111111
), Zeit800 = c(207.341772151899, 205.555555555556)), row.names = c(NA,
-2L), .Names = c("ID", "Zeit600", "Zeit650", "Zeit700", "Zeit750",
"Zeit800"), class = "data.frame")
test <- lapply(data[,2:4], function(x) x-mydf$T800)
test <- lapply(data[,2:4], function(x) x-data$T800)
test
data <- structure(list(ID = 1:2, Zeit600 = c(601.782608695652, 602.625
), Zeit650 = c(504.705882352941, 546.666666666667), Zeit700 = c(321.26582278481,
316.666666666667), Zeit750 = c(264.303797468354, 261.111111111111
), Zeit800 = c(207.341772151899, 205.555555555556)), row.names = c(NA,
-2L), .Names = c("ID", "Zeit600", "Zeit650", "Zeit700", "Zeit750",
"Zeit800"), class = "data.frame")
data
str(data)
test <- lapply(data[,2:4], function(x) x-data$Zeit800)
test
names(mydf[2:4])
names(data[2:4]
names(data[2:4])
names(test) <- sapply(names(data[2:4]), function(x) paste("T800", x, sep = "_"))
test
rm(list = ls())
data <- structure(list(ID = 1:2, Zeit600 = c(601.782608695652, 602.625
), Zeit650 = c(504.705882352941, 546.666666666667), Zeit700 = c(321.26582278481,
316.666666666667), Zeit750 = c(264.303797468354, 261.111111111111
), Zeit800 = c(207.341772151899, 205.555555555556)), row.names = c(NA,
-2L), .Names = c("ID", "Zeit600", "Zeit650", "Zeit700", "Zeit750",
"Zeit800"), class = "data.frame")
test <- lapply(data[,2:4], function(x) x-data$Zeit800)
names(test) <- sapply(names(data[2:4]), function(x) paste("T800", x, sep = "_"))
mydf <- cbind(data, test)
mydf
rm(list = ls())
data <- structure(list(ID = 1:2, Zeit600 = c(601.782608695652, 602.625
), Zeit650 = c(504.705882352941, 546.666666666667), Zeit700 = c(321.26582278481,
316.666666666667), Zeit750 = c(264.303797468354, 261.111111111111
), Zeit800 = c(207.341772151899, 205.555555555556)), row.names = c(NA,
-2L), .Names = c("ID", "Zeit600", "Zeit650", "Zeit700", "Zeit750",
"Zeit800"), class = "data.frame")
variables <- grep("ID|800", names(data), invert = T, val = T)
new_data <- sapply(variables, function(var) data[, var] - data[, "Zeit800"])
colnames(new_data) <-  paste0("T800_", "T", gsub("[:a-z:]|[:A-Z:]", "", variables))
data <- as.data.frame(cbind(data, new_data))
data <- as.data.frame(cbind(data, new_data))
data
data <- structure(list(ID = 1:2, Zeit600 = c(601.782608695652, 602.625
), Zeit650 = c(504.705882352941, 546.666666666667), Zeit700 = c(321.26582278481,
316.666666666667), Zeit750 = c(264.303797468354, 261.111111111111
), Zeit800 = c(207.341772151899, 205.555555555556)), row.names = c(NA,
-2L), .Names = c("ID", "Zeit600", "Zeit650", "Zeit700", "Zeit750",
"Zeit800"), class = "data.frame")
variables <- grep("ID|800", names(data), invert = T, val = T)
new_data <- sapply(variables, function(var) data[, var] - data[, "Zeit800"])
colnames(new_data) <-  paste0("T800_", "T", gsub("[:a-z:]|[:A-Z:]", "", variables))
data <- as.data.frame(cbind(data, new_data))
data
grep("T", names(data), val = T)
gsub("[:alpha:]", "", grep("T", names(data), val = T))
?`regular expression`
gsub("[:alnum:]", "", grep("T", names(data), val = T))
gsub("[:alpha:]", "", grep("T", names(data), val = T))
grep("T", names(data), val = T)
gsub("[:upper:]", "", grep("T", names(data), val = T))
gsub("[upper]", "", grep("T", names(data), val = T))
gsub("[:A-Z:]", "", grep("T", names(data), val = T))
strsplit(gsub("[:A-Z:]", "", grep("T", names(data), val = T)), "_")
gsub("T", "", names(data))
gsub("T", "", variables)
variables
gsub("T", "", names(new_data))
new_Data
new_data
gsub("T", "", colnames(new_data))
gsub("T", "", colnames(new_data))
data
gsub("Zeit|800", "", grep("Zeit", names(data)))
gsub("Zeit", "", grep("Zeit", names(data)))
gsub("Zeit", "", grep("Zeit", names(data), val = T))
gsub("Zeit|800", "", grep("Zeit", names(data), val = T))
gsub("Zeit", "", grep("Zeit", names(data), val = T))
as.numeric(gsub("Zeit", "", grep("Zeit", names(data), val = T)))
values <- as.numeric(gsub("Zeit", "", grep("Zeit", names(data), val = T)))
values
data
values[-length(value)]
values[-length(values)]
variables
new_data
data[colnames(new_data)]
Map(function(x, y) (800 - x)/y, values[-length(values)], data[colnames(new_data)])
new <- as.data.frame(Map(function(x, y) (800 - x)/y, values[-length(values)], data[colnames(new_data)]))
new
names(new) <- paste0("Ab_", colnames(new_data))
new
cbind.data.frame(data, new)
data <- cbind.data.frame(data, new)
data
devtools::install_github("brendan-r/brocks")
library(brocks)
new_post("My first blog post!")
getwd()
setwd("./Downloads/gitrepo/cimentadaj.github.io/_posts/")
new_post("My first blog post!")
new_post
sys_open
?shell.e
??shell.exec
.Platform$OS.type
version
version$os
getwd()
ls()
list.files()
sys_open(list.files()[1])
getwd()
setwd("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/")
servr::jekyll()
?jekyll
setwd("./_posts/")
jekyll
servr::jekyll()
getwd()
setwd("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts/")
ls()
list.files
list.files()
?servr::jekyll
?servr
??servr
brocks::new_post()
?brocks::new_post
brocks::new_post
new_post("Children: public or private goods?")
getwd()
setwd("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/")
new_post("Children: public or private goods?")
newpost()
new_post()
brocks::new_post()
library(brocks)
brocks::new_post
new_post("Children: public or private goods?", dir = "./_posts")
?new_post
getwd()
setwd(paste0(getwd(), "/_posts"))
getwd()
servr::jekyll()
servr::jekyll()
servr::jekyll(serve = T)
servr::jekyll()
?servr::jekyll
getwd()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
getwd()
servr::jekyll()
servr::jekyll()
list.files()
servr::jekyll()
servr::jekyll()
servr::jekyll(serve = T)
setwd("./2016-08-29-children-public-or-private-goods/")
servr::jekyll()
servr::jekyll()
getwd()
servr::jekyll()
servr::jekyll()
servr::jekyll()
getwd()
list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts/")
list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts/")
setwd(paste0("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts/", "/",list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts/")[1]
setwd(paste0("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts/", "/",list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts/")[1]))
getwd()
list.files()
servr::jekyll()
servr::jekyll()
servr::jekyll()
?brocks::new_post()
?brocks::new_post
new_post("T-tests, regression (and ANOVA): They’re all the same!", dir = ".")
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
getwd()
list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts")
setwd((paste0(getwd(), "/", list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts")[2]))
setwd((paste0(getwd(), "/", list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts")[2])))
setwd(paste0(getwd(), "/", list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts")[2]))
paste0(getwd(), "/", list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts")[2])
paste0("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts", "/", list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts")[2])
setwd(paste0("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts", "/", list.files("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts")[2]))
search()
brocks::new_post("Producing stargazer tables with odds ratios and standard errors in R")
brocks::new_post("Producing stargazer tables with odds ratios and standard errors in R", dir = ".")
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll(serve = F)
servr::jekyll(serve = F)
servr::jekyll(serve = F)
servr::jekyll(serve = F)
setwd("/Users/cimentadaj/Downloads/gitrepo/cimentadaj.github.io/_posts/2016-09-13-simulations-model-preds")
?brocks::new_post
new_post("Simulations and model predictions in R", dir =".")
servr::jekyll(serve = F)
servr::jekyll(serve = F)
servr::jekyll(serve = F)
?servr::jekyll
servr::jekyll(serve = F)
servr::jekyll(serve = F)
servr::jekyll(serve = F)
servr::jekyll(serve = F)
